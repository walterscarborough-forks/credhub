import org.cloudfoundry.credhub.gradlebuild.DependenciesGraphPlugin

buildscript {
    ext {
        apacheCommonsLang3Version = '3.10'
        apacheCommonsIoVersion = '1.3.2'
        apacheHttpClientVersion = '4.5.12'
        asciiDoctorPluginVersion = '1.6.1'
        bcpkixFipsVersion = '1.0.2'
        bcFipsVersion = '1.0.1'
        flywayVersion = '5.2.4'
        guavaVersion = '29.0-jre'
        h2Version = '1.4.199'
        jsonPathVersion = '2.4.0'
        kotlinVersion = '1.3.72'
        ktlintVersion = '0.35.0'
        mariadbJdbcVersion = '2.3.0'
        passayVersion = '1.3.0'
        postgresqlJdbcVersion = '42.2.12'
        spotBugsToolVersion = '3.1.9'
        spotBugsGradlePluginVersion = '1.6.9'
        springBootVersion = '2.2.6.RELEASE'
        springRestDocsVersion = '2.0.4.RELEASE'
        springSecurityOauth2Version = '2.3.6.RELEASE'
        springSecurityOauth2AutoconfigureVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url("https://repo.spring.io/plugins-release") }
        maven { url("https://plugins.gradle.org/m2/") }
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.owasp:dependency-check-gradle:3.1.1")
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.20.0'
}

apply plugin: DependenciesGraphPlugin
apply plugin: "org.owasp.dependencycheck"
apply from: "download-bouncy-castle-fips.gradle"

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

subprojects {
    plugins.withType(JavaPlugin) {
        dependencies {
            testImplementation("org.mockito:mockito-inline:3.3.3")
        }
    }
}

configurations.all {
    exclude group: "org.bouncycastle"
}
